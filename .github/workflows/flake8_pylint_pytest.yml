# This workflow will install Python dependencies, lint and run tests
# with a version of Python 3.8 for all branches on push
#  and develop branch on pull request
# without release branches (with tags)

name: Analysing the code and run tests

on:
  push:
    tags:
      - '!refs/tags/*'
    branches:
      - '*'
    paths-ignore:
      - 'temp/**'
      - 'docs/**'
      - 'assets/**'
      - 'venv/**'
      - 'uploads/**'
      - 'store/**'
      - 'coverage/**'
      - 'README.md'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'docker-entrypoint.sh'
      - 'docker-vars.env'
      - 'pytest.ini'
      - '.gitignore'
      - '.pylintrc'
#  pull_request:
#    branches:
#      - develop

jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Analysing the code with pylint
        run: |
          pylint `ls -R|grep .py$|xargs`

  run_tests:
    needs: 'lint'
    runs-on: ubuntu-18.04
    env:
      OS: ubuntu-18.04
      PYTHON: 3.8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pytest --cov=./ --cov-report=xml
      - name: Run tests with pytest
        run: |
          pytest tests/ --doctest-modules --junitxml=junit/test-results-3.8.xml
      - name: Tests report
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-3.8
          path: junit/test-results-3.8.xml
        if: ${{ always() }}